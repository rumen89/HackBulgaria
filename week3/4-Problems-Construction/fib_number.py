# fib_number.py

# Във файл fib_number.py, напишете функция fib_number(n), която:

# Взима едно цяло число n
# Връща цяло число, чииото цифри са съставени от пръвите n члена на 
# редицата на Фибоначи.
# Например, ако се въведе n = 6, то резултатът трябва да е 112358
# Ако се въведе n = 7, то резултатът трябва да е 11235813
# Редицата на Фибоначи е много известен проблем в математиката и 
# програмирането.

# Тя е безкрайна редица, която има следния вид: 1, 1, 2, 3, 5, 8, ....
# Първите два елемента са 1 и 1
# Всеки следващ елемент на редицата се получава, като се съберат 
# предходните два.
# Например, 3тия елемент е 1 + 1 = 2.
# Тук може да прочетете повече за редицата на Фибоначи

# Подсказка

# За да решите задачата по-лесно, напишете първо функцията fib(n), 
# която връща списък с първите n члена на редицата на Фибоначи.
# След това вземете този списък и го обърнете в число. 
# Внимавайте с числата, които имат повече от 1 цифра в себе си.
# За да получите първите n елемента от редицата на Фибоначи, 
# може да ползвате следния алгоритъм:

# Ако n == 1, то това е [1]
# Ако n == 2, то това е [1, 1]
# Ако n == 3, то започвате започвате чрез цикъл да получавате всеки 
# следващ елемент, като той е равен на сумата на предходните два.
# Всеки новополучен елемент го добавяте в резултатен списък.
# Държите брояч, който знае колко члена на редицата сме намерило.
# Когато този брояч стане == на n, тогава спираме

def fib(n):
    if n == 1:
        fib_list = [1]
    elif n == 2:
        fib_list = [1, 1]

    counter = 0

    fib_list = [1, 1]

    while len(fib_list) < n:
        fib_list += [fib_list[counter] + fib_list[counter + 1]]

        counter += 1

    return fib_list

def fib_number(numbers):
    result = 0

    for number in numbers:
        counter = 0

        n = number

        while n != 0:
            counter += 1

            n = n // 10

        result = (result * 10 ** counter) + number

    return result

# n = input("Enter some number: ")
# n = int(n)

# print(fib_number(fib(n)))

# print(fib(n))