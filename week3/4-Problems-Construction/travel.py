# travel.py

# Марийка е нов студент в София и иска да сметне как най-евтино ще и 
# излезе придвижването с градския транспорт, спрямо броя на пътуваният, 
# която прави за 1 месец и броя на линииите, които използва.

# Знаем следните цени за 1 месец:

# Цената на 1 билетче е 1 лев.
# Цената на 1 карта за цяла линия е 23 лева.
# Цената за всички линии е 50 лева.
# Във файл travel.py, напишете функция travel_cost(travels), 
# където travels е списък от числа, представляващ следното:

# Всеки елемент в travels представлява броя на пътувания в 1 линия в 
# градския транспорт.
# Например [12, 28] би се разчело така: Марийка е пътувала общо в 2 линии, 
# като в 1вата е пътувала 12 пъти, а във втората 28 пъти.
# Ако имаме [50] имаме 50 пътувания само в 1 линия.
# Функцията трябва да върне оптималната цена, 
# която Марийка ще плати за месеца, при тези придвижвания в travels

# Например:

# Ако имаме travels = [28, 5], то ще е най-изгодно да си вземем една 
# карта за първата линия за 23 лева, вместо да платим 28 лева за билетчета,
#  а за втората линия да си платим 5 лева за билетчета. Тотално, 28 лева.
# Ако имаме travels = [22], ще е най-изгодно да си купим 22 билетчета 
# за 22 лева.
# Ако имаме travels = [30, 28, 55], то ще е най-изгодно да си вземем 
# карта за цялата градска мрежа

def travel_cost(travels):
    bilet = 1
    card_one_line = 23
    card_all_lines = 50

    cost = 0

    for travel in travels:
        if travel < card_one_line:
            cost += travel
        elif travel < card_all_lines:
            cost += card_one_line

        if cost >= card_all_lines:
            return card_all_lines

    return cost

travels = [2, 24, 2]

print(travel_cost(travels))